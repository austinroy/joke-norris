// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders joke failure ui joke is not loaded 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="ui active inline loader"
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="ui active inline loader"
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renders the expected joke 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="ui raised segment"
        >
          <a
            class="ui red massive ribbon label"
            style="text-transform: uppercase;"
          >
            dev
          </a>
          <div>
            <div>
              <p
                class="joke"
              />
            </div>
          </div>
          <a
            class="ui icon primary right labeled button"
            href="/"
            role="button"
          >
            <i
              aria-hidden="true"
              class="home icon"
            />
            Choose Category
          </a>
          <button
            class="ui teal icon positive right labeled button"
          >
            Next
            <i
              aria-hidden="true"
              class="right arrow icon"
            />
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="ui raised segment"
      >
        <a
          class="ui red massive ribbon label"
          style="text-transform: uppercase;"
        >
          dev
        </a>
        <div>
          <div>
            <p
              class="joke"
            />
          </div>
        </div>
        <a
          class="ui icon primary right labeled button"
          href="/"
          role="button"
        >
          <i
            aria-hidden="true"
            class="home icon"
          />
          Choose Category
        </a>
        <button
          class="ui teal icon positive right labeled button"
        >
          Next
          <i
            aria-hidden="true"
            class="right arrow icon"
          />
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
